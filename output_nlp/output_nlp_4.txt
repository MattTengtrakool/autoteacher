Then, the variable code: answer is passed to the code: printf function.code: %s tells the code: printf function to prepare itself to receive a code: string .- code: answer is a special holding place we call a variable .code: answer is of type code: string and can hold any string within it. There are many data types , such as code: int ,code: bool ,code: char , and many others.- Running code: make hello again in the terminal window, you can run your program by typing code: ./hello . The program now asks for your name and then says hello with your name attached.## Conditionals  - Another building block you utilized within Scratch was that of conditionals . For example, you might want to do one thing if x is greater than y. Further, you might want to do something else if that condition is not met.-  In the terminal window, type code: code compare.c and write code as follows:code: #include  <cs50.h> #include  <stdio.h>   int  main ( void )  {  int  x  =  get_int ( "What's x? " )  int  y  =  get_int ( "What's y? " )  if  ( x  <  y )  {  printf ( "x is less than y \n " )  }  }  Notice that we create two variables, an code: int or integer called code: x and another called code: y . The values of these are populated using the code: get_int function.- You can run your code by executing code: make compare in the terminal window, followed by code: ./compare . If you get any error messages, check your code for errors.-  We can improve your program by coding as follows:code: #include  <cs50.h> #include  <stdio.h>   int  main ( void )  {  int  x  =  get_int ( "What's x? " )  int  y  =  get_int ( "What's y? " )  if  ( x  <  y )  {  printf ( "x is less than y \n " );}  else  if  ( x  >  y )  {  printf ( "x is greater than y \n " );}  else  {  printf ( "x is equal to y \n " );}  }  Notice that all potential outcomes are now accounted for.- You can re-make and re-run your program and test it out.-  Considering another data type called a code: char we can start a new program by typing code: code agree.c into the terminal window. 