The statement of code is closed with a code: ;.-  A common error in C programming is the omission of a semicolon. Modify your code as follows:code: #include  <stdio.h>   int  main ( void )  {  printf ( "hello, world \n " )  }  Notice the semicolon is now gone.- In your terminal window, run code: make hello . You will now be met with numerous errors! Placing the semicolon back in the correct position and running code: make hello again, the errors go away.- Notice also the special symbol code: \n in your code. Try removing those characters and making your program again by executing code: make hello . Typing code: ./hello in the terminal window, how did your program change?  -  Restore your program to the following:code: #include  <stdio.h>   int  main ( void )  {  printf ( "hello, world \n " );}  Notice the semicolon and code: \n have been restored.- The statement at the start of the code code: #include <stdio.h> is a very special command that tells the compile that you want to use the capabilities of library called code: stdio.h . This allows you, among many other things, to utilize the code: printf function. You can read about all the capabilities of this library on the Manual Pages .- It turns out that CS50 has its own library called code: cs50.h . Let’s use this library in your program.## Variables  - Recall that in Scratch, we had the ability to ask the user “What’s your name?” and say “hello” with that name appended to it.-  In C, we can do the same. Modify your code as follows:code: #include  <cs50.h> #include  <stdio.h>   int  main ( void )  {  string  answer  =  get_string ( "What's your name? " );printf ( "hello, %s \n " ,answer );}  Notice that code: #include <cs50.h> has been added to the top of your code. The code: get_string function is used to get a string from the user. 